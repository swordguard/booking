[{"F:\\Jay's-Work-In-Au\\testings\\booking\\src\\index.js":"1","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\App.js":"2","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\reportWebVitals.js":"3","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\components\\ProgressBar.js":"4","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\configs\\steps.js":"5","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\configs\\sessions.js":"6","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\reducers\\index.js":"7","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\components\\Sessions\\index.js":"8","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\components\\Sessions\\MyDateAndTimePicker.js":"9","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\components\\Sessions\\Session.js":"10","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\utils\\index.js":"11","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\components\\Sessions\\BookedSessions.js":"12","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\components\\Demographics\\index.js":"13","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\components\\Demographics\\Demograhpics.js":"14"},{"size":517,"mtime":1628727165154,"results":"15","hashOfConfig":"16"},{"size":1691,"mtime":1629001248232,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1628727165154,"results":"18","hashOfConfig":"16"},{"size":893,"mtime":1629002493355,"results":"19","hashOfConfig":"16"},{"size":751,"mtime":1628997271220,"results":"20","hashOfConfig":"16"},{"size":289,"mtime":1628761192541,"results":"21","hashOfConfig":"16"},{"size":992,"mtime":1629002716908,"results":"22","hashOfConfig":"16"},{"size":98,"mtime":1628983965415,"results":"23","hashOfConfig":"16"},{"size":2769,"mtime":1628996663093,"results":"24","hashOfConfig":"16"},{"size":3049,"mtime":1628995558530,"results":"25","hashOfConfig":"16"},{"size":1337,"mtime":1628995823937,"results":"26","hashOfConfig":"16"},{"size":605,"mtime":1628993243045,"results":"27","hashOfConfig":"16"},{"size":30,"mtime":1628997241928,"results":"28","hashOfConfig":"16"},{"size":4580,"mtime":1629003580529,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1jd71ar",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Jay's-Work-In-Au\\testings\\booking\\src\\index.js",[],["62","63"],"F:\\Jay's-Work-In-Au\\testings\\booking\\src\\App.js",[],"F:\\Jay's-Work-In-Au\\testings\\booking\\src\\reportWebVitals.js",[],"F:\\Jay's-Work-In-Au\\testings\\booking\\src\\components\\ProgressBar.js",[],"F:\\Jay's-Work-In-Au\\testings\\booking\\src\\configs\\steps.js",["64"],"import {Sessions, BookedSessions} from \"../components/Sessions\"\r\nimport {Demographics} from '../components/Demographics'\r\n\r\nconst steps = [\r\n    {\r\n        id: 1,\r\n        name: 'chooseAppointment',\r\n        label: 'Choose Appointment',\r\n        isFirstStep: true,\r\n        component: Sessions,\r\n        navigatorButtonLabel: 'Continue'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'yourInfo',\r\n        label: 'Your Info',\r\n        component: Demographics,\r\n        backButtonLabel: '< change',\r\n        navigatorButtonLabel: 'Complete Appointment',\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'confirmation',\r\n        label: 'Confirmation',\r\n        isLastStep: true,\r\n        navigatorButtonLabel: 'Reschedule'\r\n    }\r\n]\r\n\r\n\r\nexport default steps","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\configs\\sessions.js",[],"F:\\Jay's-Work-In-Au\\testings\\booking\\src\\reducers\\index.js",[],"F:\\Jay's-Work-In-Au\\testings\\booking\\src\\components\\Sessions\\index.js",[],"F:\\Jay's-Work-In-Au\\testings\\booking\\src\\components\\Sessions\\MyDateAndTimePicker.js",["65"],"import React, {useEffect, useState} from  'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport {formatDateToNumber, availableTimeSlots, getTimeLabelValue} from '../../utils'\r\n\r\nconst TimeRangeSelection = ({onTimeSelect, timeSlot}) => {\r\n    return (\r\n        <div>\r\n            <div>Please select a time</div>\r\n            <div>\r\n            <fieldset id=\"group\">\r\n                {\r\n                    Array(availableTimeSlots).fill().map((v, i) => {\r\n                        const change= (e) => onTimeSelect()(e.target.value, i)\r\n                        const timeLabel = getTimeLabelValue(i)\r\n                        return <div key={i}>\r\n                                {Number(timeSlot) === i ?\r\n                                    <input type='radio' key={i} id={i} checked onChange={change} name=\"group\" value={timeLabel}/> :\r\n                                    <input type='radio' key={i} id={i} onChange={change} name=\"group\" value={timeLabel}/>    \r\n                                }\r\n                                <label className='strikethrough' htmlFor={i}>{timeLabel}</label>\r\n                        </div>\r\n                    })\r\n                }\r\n                </fieldset>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst MyDatePicker = ({startDate, onDatePickerChange}) => {\r\n    return (\r\n      <DatePicker selected={startDate} onChange={(date) => onDatePickerChange(date)} \r\n        inline \r\n        minDate={new Date()}\r\n      />\r\n    );\r\n};\r\n\r\nconst MyDateAndTimePicker = ({ sessionName, onDateSelect, onTimeSelect, dispatch, bookedSession }) => {\r\n    console.log(111, bookedSession.bookedDate, Number(bookedSession.bookedDate))\r\n    const [startDate, setStartDate] = useState(bookedSession && bookedSession.sessionName === sessionName\r\n         ? new Date(Number(bookedSession.bookedDate)) : new Date());\r\n    const [timeSlot, setTimeSlot] = useState();\r\n    const onDatePickerChange = (dateSelected) => {\r\n        onDateSelect(dateSelected)\r\n        setStartDate(dateSelected)\r\n    }\r\n\r\n    const onTimeSelectWithDate = (date) => (label, index) => {\r\n        // remove prepopulated timeSlot\r\n        setTimeSlot()\r\n        onTimeSelect({selectedDate: formatDateToNumber(date), label, index})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (bookedSession) {\r\n            if (bookedSession.sessionName === sessionName) {\r\n                setTimeSlot(bookedSession.timeSlot)\r\n            }\r\n        }\r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n            <MyDatePicker onDatePickerChange={onDatePickerChange} dispatch={dispatch} startDate={startDate}/>\r\n            <TimeRangeSelection onTimeSelect={() => onTimeSelectWithDate(startDate)} timeSlot={timeSlot}/>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyDateAndTimePicker","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\components\\Sessions\\Session.js",["66","67"],"import {useState, useEffect} from  'react'\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport sessions from '../../configs/sessions'\r\nimport MyDateAndTimePicker from './MyDateAndTimePicker'\r\n\r\nimport {formatDateToNumber, checkIfSessionIsBooked} from '../../utils'\r\n\r\nconst SessionTitle = ({sessionName, price}) => {\r\n    return (\r\n        <div className='left'>\r\n                <div className='bold'>{sessionName}</div>\r\n                <div>30 minutes @ ${price}.00</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Session = ({openedSession, setOpenedSession,bookedSession, name, price, onDateSelect, onTimeSelect, dispatch, state}) => {\r\n    const [showDownArrow, setShowDownArrow] = useState(false);\r\n    const onSessionTittleClick = () => {\r\n        setShowDownArrow(!showDownArrow)\r\n        setOpenedSession(name)\r\n    }\r\n    const onSessionTimeSelect = (name) => ({selectedDate, label, index}) => {\r\n        onTimeSelect({sessionName: name, selectedDate, label, index})\r\n    }\r\n\r\n    useEffect(() => {\r\n        setShowDownArrow(openedSession === name)\r\n    }, [openedSession])\r\n\r\n    return <div className='session-container'>\r\n        <div onClick={onSessionTittleClick} className='flex-space-between session'>\r\n            <SessionTitle sessionName={name} price={price}/>\r\n            {showDownArrow && <div className='flex-center'>\\/</div>}\r\n        </div>\r\n        {showDownArrow && <MyDateAndTimePicker\r\n            bookedSession={bookedSession}\r\n            onDateSelect={onDateSelect}\r\n            onTimeSelect={onSessionTimeSelect(name)}\r\n            dispatch={dispatch}\r\n            state={state}\r\n            sessionName={name}\r\n            />\r\n        }\r\n    </div>\r\n}\r\n\r\nexport const Sessions = ({state, dispatch}) => {\r\n    const [openedSession, setOpenedSession] = useState()\r\n    const onTimeSelect = ({sessionName, label, index, selectedDate}) => {\r\n        console.log('onTimeSelect', sessionName,label, index, selectedDate)\r\n        dispatch({\r\n            type: 'UPDATE_TIME', \r\n            payload: {\r\n                sessionName,\r\n                date: formatDateToNumber(selectedDate), \r\n                timeSlot: index\r\n            }\r\n        })\r\n    }\r\n    const onDateSelect = (date) => {\r\n        dispatch({type: 'UPDATE_DATE', payload: formatDateToNumber(date)})\r\n    }\r\n\r\n    \r\n    const bookedSession = checkIfSessionIsBooked(state)\r\n    useEffect(() => {\r\n        if (bookedSession) {\r\n            setOpenedSession(bookedSession.sessionName)\r\n        }\r\n    }, [])\r\n    \r\n    return <div className='flex-center form-body'>\r\n    {\r\n        sessions.map(session => {\r\n            const {id} = session\r\n            return <Session key={id} {...session} \r\n                openedSession={openedSession}\r\n                setOpenedSession={setOpenedSession}\r\n                bookedSession={bookedSession}\r\n                onTimeSelect={onTimeSelect}\r\n                onDateSelect={onDateSelect}\r\n                state={state}\r\n                dispatch={dispatch}\r\n            />\r\n        })\r\n    }\r\n    </div>\r\n}\r\n","F:\\Jay's-Work-In-Au\\testings\\booking\\src\\utils\\index.js",[],"F:\\Jay's-Work-In-Au\\testings\\booking\\src\\components\\Sessions\\BookedSessions.js",[],"F:\\Jay's-Work-In-Au\\testings\\booking\\src\\components\\Demographics\\index.js",[],"F:\\Jay's-Work-In-Au\\testings\\booking\\src\\components\\Demographics\\Demograhpics.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":19,"nodeType":"74","messageId":"75","endLine":1,"endColumn":33},{"ruleId":"76","severity":1,"message":"77","line":62,"column":8,"nodeType":"78","endLine":62,"endColumn":10,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":30,"column":8,"nodeType":"78","endLine":30,"endColumn":23,"suggestions":"81"},{"ruleId":"76","severity":1,"message":"82","line":72,"column":8,"nodeType":"78","endLine":72,"endColumn":10,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'BookedSessions' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'bookedSession' and 'sessionName'. Either include them or remove the dependency array.","ArrayExpression",["86"],"React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array. If 'setShowDownArrow' needs the current value of 'name', you can also switch to useReducer instead of useState and read 'name' in the reducer.",["87"],"React Hook useEffect has a missing dependency: 'bookedSession'. Either include it or remove the dependency array.",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [bookedSession, sessionName]",{"range":"95","text":"96"},"Update the dependencies array to be: [name, openedSession]",{"range":"97","text":"98"},"Update the dependencies array to be: [bookedSession]",{"range":"99","text":"100"},[2452,2454],"[bookedSession, sessionName]",[1072,1087],"[name, openedSession]",[2503,2505],"[bookedSession]"]